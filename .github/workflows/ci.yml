jobs:
  build:
    name: DBRider Build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3.1.1
      with:
        distribution: temurin
        java-version: '11'
    - continue-on-error: true
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Build
      run: mvn install -DskipTests
  release:
    env:
      MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
      MAVEN_USER: ${{ secrets.MAVEN_USER }}
    if: github.ref == 'refs/heads/master'
    name: Release DBRider to maven central
    needs: test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3.1.1
      with:
        distribution: temurin
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        java-version: '11'
        server-id: releases
        server-password: MAVEN_PASS
        server-username: MAVEN_USER
    - continue-on-error: true
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      if: '!contains(github.event.head_commit.message, ''prepare release'')'
      name: Deploy snapshots
      run: mvn deploy --settings settings.xml -DskipTests=true -Darguments="-DskipTests
        -Dmaven.test.skip=true"
    - continue-on-error: true
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
        MAVEN_USER: ${{ secrets.MAVEN_USER }}
      if: contains(github.event.head_commit.message, 'prepare release')
      name: Release
      run: mvn -pl '!rider-examples/rider-kotlin' deploy -Prelease
  test:
    name: DBRider Test, Coverage & Docs
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3.1.1
      with:
        distribution: temurin
        java-version: '11'
    - continue-on-error: true
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Test
      run: mvn verify jacoco:report -Pcoverage
    - continue-on-error: true
      if: github.ref == 'refs/heads/master'
      name: Coverage
      run: mvn coveralls:report -Pcoverage -DCOVERAGE_TOKEN=${{ secrets.COVERAGE_TOKEN
        }} -DskipTests
    - continue-on-error: true
      name: Configure Git user
      run: 'git config --global user.email "${{ secrets.GIT_EMAIL }}"

        git config --global user.name "rmpestano"

        '
    - continue-on-error: true
      if: github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message,
        'prepare release')
      name: Docs snapshot
      run: cd rider-core && mvn -q cukedoctor:execute scm-publish:publish-scm -Pdocs
        -DGH_TOKEN=${{ secrets.GH_TOKEN }}
    - continue-on-error: true
      if: github.ref == 'refs/heads/master' && contains(github.event.head_commit.message,
        'prepare release')
      name: Docs release
      run: cd rider-core && mvn -q cukedoctor:execute scm-publish:publish-scm -Pdocs
        -Prelease -DGH_TOKEN=${{ secrets.GH_TOKEN }}
name: DBRider Build
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
